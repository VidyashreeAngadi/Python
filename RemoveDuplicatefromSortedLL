Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.
Example 1:
Input: head = [1,2,3,3,4,4,5]
Output: [1,2,5]
Example 2:
Input: head = [1,1,1,2,3]
Output: [2,3]
 
class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        firstnode=ListNode()
        firstnode.next=head
        prev=firstnode
        cur=head
        while cur:
            while cur.next and cur.val==cur.next.val:
                cur=cur.next
            if prev.next==cur:
                prev=prev.next
            else:
                prev.next=cur.next
            cur=cur.next
        return firstnode.next
    
