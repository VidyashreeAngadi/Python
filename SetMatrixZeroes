Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.
You must do it in place.
Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:
Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        if not matrix:
            return []
        rows, cols = len(matrix), len(matrix[0])
        zero_row = [False] * rows
        zero_col = [False] * cols
        for row in range(rows):
            for col in range(cols):
                if matrix[row][col] == 0:
                    zero_row[row] = True  
                    zero_col[col] = True  
        for row in range(rows):
            for col in range(cols):
                if zero_row[row] or zero_col[col]:
                    matrix[row][col] = 0
